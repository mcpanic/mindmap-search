#summary 지식 DB 시스템
#labels Featured,Phase-Design

= 지식 DB 시스템 =

데이터포맷을 지식검색이 가능한 형식의 데이터로 구조화하는 DB시스템

== 설계 방향 ==
  * 지식을 효율적으로 표현할 수 있는 *구조적* 부분과 *시각화* 부분을 균등하게 고려한다. 마인드맵의 특징은 조각조각의 지식을 표현하는 것이 아니라 지식 간의 관계를 시각적으로 나타낸다는 것이다. 이러한 점에 초점을 두고 DB를 설계할 필요가 있다.
  * 구조화된 형태를 상세하게 define하고, 확장성이 있으면서도 검색이 용이한 포맷으로 만든다.

== System Task ==
  * Mindmap 파일을 읽어들여 필요정보를 추출한 뒤 노드 기본 정보와 검색 인덱싱 처리를 한 노드 텍스트로 나누어 DB에 저장한다.
  * 입력: XML 형태의 Mindmap 저장 파일
  * 출력: 노드 DB 와 텍스트 DB

== Interface 설계 == 
  * [XML파서모듈] - [형태소분석모듈] - [가중치산정모듈] - [색인저장모듈] - [물리적DB모듈]
  * 각 모듈들 사이는 인터페이스로 연결된다.

  # XML 파일을 parse해 나가면서 node 정보를 추출한다. (Xerces XML Parser 활용)
  # 추출한 정보 중 노드 텍스트에 대해 Tokenize 하여 쪼갠다. (Whitespace 단위로 나눔)
  # 노드의 중요도에 따라 가중치를 부여한다. _(현재 미구현)_
  # 인덱싱을 하여 DB 에 저장할 수 있는 형태로 만든다. (현재는 DB모듈과 통합되어 있음)
  # 노드와 분석한 텍스트를 각각 DB 에 저장한다. (SQLite3 활용)

== DB 설계 ==
  * 두 가지의 DB 테이블이 존재한다.

  * 일반적인 노드 정보를 담는 Node DB
  || NodeID (text) || TimeCre (text) || TimeMod (text) || ParentNodeID (text) ||


  * 노드의 텍스트를 형태소 분석하여 인덱싱해 저장하는 Text DB
  || Token (text)|| NodeID (text) || Weight (integer) || Tag (text) || Position (integer) ||


== 마인드맵 노드 설계 ==
{{{
	string nodeID;            // 노드의 고유 ID
	string nodeName;          // 노드의 이름 (XML 태그 이름)
	string timeCreated;       // 생성시간
	string timeModified;      // 최종수정시간
	string nodeText;          // 노드 텍스트 (검색의 대상)
	string parentNodeID;      // 부모노드의 고유  ID
	vector<string> nodeToken; // 형태소 분석 이후 쪼개진 텍스트
}}}

== 기타 ==
[subsystem2-1 노트] 참고