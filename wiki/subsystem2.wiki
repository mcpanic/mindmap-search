#summary 지식 DB 시스템
#labels Featured,Phase-Design

= 지식 DB 시스템 =

데이터포맷을 지식검색이 가능한 형식의 데이터로 구조화하는 DB시스템

== 설계 방향 ==
  * 지식을 효율적으로 표현할 수 있는 *구조적* 부분과 *시각화* 부분을 균등하게 고려한다. 마인드맵의 특징은 조각조각의 지식을 표현하는 것이 아니라 지식 간의 관계를 시각적으로 나타낸다는 것이다. 이러한 점에 초점을 두고 DB를 설계할 필요가 있다.
  * 구조화된 형태를 상세하게 define하고, 확장성이 있으면서도 검색이 용이한 포맷으로 만든다.

== 세부 Task ==
  * 입력으로는 Mindmap 저장 파일을 받아들인다. 
  * 저장 파일을 parse해 나가면서 node와 link 정보를 추출한다.
  * 추출한 정보를 database에 저장한다.
  * 검색 시스템이 읽어나가기 좋은 형태로 database를 재구성한다.
  * Indexer 의 사용여부 결정 

== 생각해 볼 문제 == 
  * 이 subsystem은 backend에서만 동작하는 것인가? 다시 말하면, 사용자와 직접 인터페이스를 하는 경우가 있는가?
  * DB에 마인드맵을 추가하는 사용자 인터페이스가 존재해야 하지 않을까?
    * XML을 파싱해서 DB에 저장하기 전, 테스트용도로 필요한 걸까요?
    * 마인드맵정보를 어떻게 DB에 저장해야하는가?
      * 어떤 정보를 저장할지를 먼저 결정하는 것은 어떨까.
  * 한번에 여러개의 마인드맵을 DB에 추가할 수도 있어야 할 것이다.
    * 마이그레이션, 혹은 불러오기 기능?
      * 초반에 많은 DB를 확보
  * DB에서 특정 마인드맵 지식을 삭제할 수도 있어야 할까?
    * 정보검색에 해가되는 정보가 있을까?
      * 소수의 의견, 마이너리티는 검색에서 어떤 의미가 있는가?

== freemind 의 xml문서로 부터 얻을 수 있는 유의미한 값들에 대한 생각 ==
  * 노드의 깊이
    * 마인드맵의 특성상 깊이가 의미하는 바는 뭘까? 구체적인? 정리된?
     * 브레인스토밍을 마인드맵으로 그릴 때는 깊이가 구체화를 의미하지 않음. 새로운 생각으로 전이.
  * 작성된 시간
    * 시간축 검색을 할 수 있을 듯. 예를들어 대통령선거기간중 가장 많이 작성되는 생각들을 검색. 
  * 좌측노드와 우측노드의 키워드
    * 어떻게든 상관관계가 있음. 
    * 정보연관성의 강도가 강하다.
  * 컬러, 이모티콘
    * 특정 컬러가 무엇을 의미하는지 알기는 힘들다.
    * 다만 기본 컬러가 아닌 것은 중요하다고 볼 수 있을 듯.
  * 컬러와 달리 이모티콘은 어느정도 의미를 부여할 수 있다.
    * 이모티콘이 주는 정보전달성이 분명해야.
  * 자식 노드의 수
     * 자식 노드가 많으면 중요한 것인가?
      * 중요하다는 것은 무얼까? 정보검색에서 가중치가 높다는 것?
        * 많다고 중요한 것은 아니잖아.